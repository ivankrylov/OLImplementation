--- old/src/share/vm/runtime/arguments.cpp	2015-06-16 10:25:48.902326853 -0700
+++ new/src/share/vm/runtime/arguments.cpp	2015-06-16 10:25:48.830328600 -0700
@@ -1254,7 +1254,7 @@
                                     CardTableRS::ct_max_alignment_constraint());
 
   // Now make adjustments for CMS
-  intx   tenuring_default = (intx)6;
+  uintx tenuring_default = (uintx) 3;
   size_t young_gen_per_worker = CMSYoungGenPerWorker;
 
   // Preferred young gen size for "short" pauses:
@@ -1572,7 +1572,7 @@
 
 void Arguments::select_gc() {
   if (!gc_selected()) {
-    select_gc_ergonomically();
+    ArgumentsExt::select_gc_ergonomically();
   }
 }
 
@@ -1611,7 +1611,7 @@
   assert(UseParallelGC || UseParallelOldGC, "Error");
   // Enable ParallelOld unless it was explicitly disabled (cmd line or rc file).
   if (FLAG_IS_DEFAULT(UseParallelOldGC)) {
-    FLAG_SET_DEFAULT(UseParallelOldGC, true);
+    FLAG_SET_DEFAULT(UseParallelOldGC, false);
   }
   FLAG_SET_DEFAULT(UseParallelGC, true);
 
@@ -1714,6 +1714,17 @@
 #endif // ASSERT
 #endif // INCLUDE_ALL_GCS
 
+void Arguments::set_object_layout_flags() {
+    if (UseObjectLayoutIntrinsics) {
+      FLAG_SET_DEFAULT(UseParallelGC,true);
+      FLAG_SET_DEFAULT(UseParallelOldGC,false);
+      FLAG_SET_DEFAULT(UseCompressedOops, false);
+      FLAG_SET_DEFAULT(UseBiasedLocking, false);
+    }
+}
+
+
+
 void Arguments::set_gc_specific_flags() {
 #if INCLUDE_ALL_GCS
   // Set per-collector flags
@@ -2067,7 +2078,7 @@
 }
 
 // Check consistency of GC selection
-bool Arguments::check_gc_consistency() {
+bool Arguments::check_gc_consistency_user() {
   check_gclog_consistency();
   bool status = true;
   // Ensure that the user has not selected conflicting sets
@@ -2233,7 +2244,7 @@
     FLAG_SET_DEFAULT(UseGCOverheadLimit, false);
   }
 
-  status = status && check_gc_consistency();
+  status = status && check_gc_consistency_user();
   status = status && check_stack_pages();
 
   if (CMSIncrementalMode) {
@@ -2408,12 +2419,16 @@
   status = status && verify_percentage(YoungGenerationSizeSupplement, "YoungGenerationSizeSupplement");
   status = status && verify_percentage(TenuredGenerationSizeSupplement, "TenuredGenerationSizeSupplement");
 
-  // the "age" field in the oop header is 4 bits; do not want to pull in markOop.hpp
-  // just for that, so hardcode here.
-  status = status && verify_interval(MaxTenuringThreshold, 0, 15, "MaxTenuringThreshold");
-  status = status && verify_interval(InitialTenuringThreshold, 0, MaxTenuringThreshold, "MaxTenuringThreshold");
-  status = status && verify_percentage(TargetSurvivorRatio, "TargetSurvivorRatio");
-  status = status && verify_percentage(MarkSweepDeadRatio, "MarkSweepDeadRatio");
+  // The age field in the object header has 2 bits. We do not want to pull in
+  // markOop.hpp just for that, so hardcode here.
+  status = status && verify_interval(MaxTenuringThreshold,
+      0, 3, "MaxTenuringThreshold");
+  status = status && verify_interval(InitialTenuringThreshold,
+      0, MaxTenuringThreshold, "InitialTenuringThreshold");
+  status = status && verify_percentage(TargetSurvivorRatio,
+      "TargetSurvivorRatio");
+  status = status && verify_percentage(MarkSweepDeadRatio,
+      "MarkSweepDeadRatio");
 
   status = status && verify_min_value(MarkSweepAlwaysCompactCount, 1, "MarkSweepAlwaysCompactCount");
 #ifdef COMPILER1
@@ -3837,8 +3852,8 @@
       CommandLineFlags::printFlags(tty, false);
       vm_exit(0);
     }
-    if (match_option(option, "-XX:NativeMemoryTracking", &tail)) {
 #if INCLUDE_NMT
+    if (match_option(option, "-XX:NativeMemoryTracking", &tail)) {
       // The launcher did not setup nmt environment variable properly.
       if (!MemTracker::check_launcher_nmt_support(tail)) {
         warning("Native Memory Tracking did not setup properly, using wrong launcher?");
@@ -3853,12 +3868,8 @@
       } else {
         vm_exit_during_initialization("Syntax error, expecting -XX:NativeMemoryTracking=[off|summary|detail]", NULL);
       }
-#else
-      jio_fprintf(defaultStream::error_stream(),
-        "Native Memory Tracking is not supported in this VM\n");
-      return JNI_ERR;
-#endif
     }
+#endif
 
 
 #ifndef PRODUCT
@@ -4004,13 +4015,17 @@
 
 jint Arguments::apply_ergo() {
 
+  // We need to set all object layout flags
+  // before ergonomics possibly enables CompressedOops
+  set_object_layout_flags();
+  
   // Set flags based on ergonomics.
   set_ergonomics_flags();
 
   set_shared_spaces_flags();
 
   // Check the GC selections again.
-  if (!check_gc_consistency()) {
+  if (!ArgumentsExt::check_gc_consistency_ergo()) {
     return JNI_EINVAL;
   }
 
